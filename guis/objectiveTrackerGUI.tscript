$ObjectiveTrackerGUI::registeredColor = "0000FF";
$ObjectiveTrackerGUI::activeColor = "00FF00";
$ObjectiveTrackerGUI::failedColor = "FF0000";

function ObjectiveTrackerGUI::onWake(%this)
{   
    commandToServer('getObjectives');
}

function clientCMDupdateObjectiveClock(%time)
{
    if (%time>0)
    {
        ObjectiveTrackerTimerContainer.setVisible(true);
        guiObjectiveClock.setReverseTime(%time);
    }
    else    
        ObjectiveTrackerTimerContainer.setVisible(false);
}

function ObjectiveTrackerGUI::refresh(%this)
{
   ObjectiveListText.setText("");

   %ObjectiveTrackerText = "";
   for(%i=0; %i < ClientObjectiveList.count(); %i++)
   {
      %ObjectiveName = ClientObjectiveList.getKey(%i);
      %ObjectiveData = ClientObjectiveList.getValue(%i);
      
      %ObjectiveStatus = getField(%ObjectiveData, 0);
      %ObjectiveDescription = getField(%ObjectiveData, 1);
      %ObjectiveExtendedDescFile = getField(%ObjectiveData, 2);
      
      //re-format description if there's an item count associated
      if(getTokenCount(%ObjectiveDescription, ":") > 1)
      {
         %displayName = getToken(%ObjectiveDescription, ":", 0);
         %itemTracking = getToken(%ObjectiveDescription, ":", 1); 
         
         %ObjectiveDescription = %displayName @ ": " @ %itemTracking;
      }
      
      if (detag(%ObjectiveStatus) $= "complete")
            continue;
            
      //We'll color code the text on the tracker by the quest's status so it's
      //easier to see at a glance where everything is at
      %colorcode = "<color:" @ $ObjectiveTrackerGUI::registeredColor @ ">";

      if (detag(%ObjectiveStatus) $= "active")
         %colorcode = "<color:" @ $ObjectiveTrackerGUI::activeColor @ ">";
      if (detag(%ObjectiveStatus) $= "failed")
         %colorcode = "<color:" @ $ObjectiveTrackerGUI::failedColor @ ">";
      
      //append each quest's description and a new line so it formats correctly for display
      %ObjectiveTrackerText = %ObjectiveTrackerText @ %colorcode @ %ObjectiveDescription @"\n";
   }
   
   ObjectiveListText.setText(%ObjectiveTrackerText);
   ObjectiveListText.forceReflow();
}